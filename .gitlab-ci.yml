stages:
  - build
  - analyze

build:
  stage: build
  script:
    - docker-compose build

trivy:
  stage: analyze
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    IMAGE: trivy-ci-test:$CI_COMMIT_SHA
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  parallel:
    matrix:
      - IMAGE: jellyfin/jellyfin:latest
      - IMAGE: lscr.io/linuxserver/deluge:latest
      - IMAGE: linuxserver/jackett:latest
  script:
    - IMAGE_PATH=$(echo $IMAGE | tr '/' '_')
    - ./trivy image --severity CRITICAL $IMAGE > "${IMAGE_PATH}-scan-report.json"
  cache:
    paths:
      - .trivycache/
  artifacts:
    paths:
      - ${IMAGE_PATH}-scan-report.json"
